<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="59e8d504-b30e-4206-b9e9-d4ea7d1a29bd" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/resources/update.json" beforeDir="false" afterPath="$PROJECT_DIR$/resources/update.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/json_to_sql/core.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/json_to_sql/core.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/json_to_sql/insert.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/json_to_sql/insert.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/json_to_sql/json_util.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/json_to_sql/json_util.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/json_to_sql/sql_util.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/json_to_sql/sql_util.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/json_to_sql/update.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/json_to_sql/update.clj" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FUSProjectUsageTrigger">
    <session id="-2102177168">
      <usages-collector id="statistics.lifecycle.project">
        <counts>
          <entry key="project.closed" value="6" />
          <entry key="project.open.time.0" value="1" />
          <entry key="project.open.time.4" value="1" />
          <entry key="project.open.time.5" value="3" />
          <entry key="project.open.time.6" value="1" />
          <entry key="project.open.time.8" value="1" />
          <entry key="project.opened" value="7" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.open">
        <counts>
          <entry key="LICENSE" value="1" />
          <entry key="clj" value="27" />
          <entry key="json" value="6" />
          <entry key="md" value="1" />
          <entry key="xml" value="1" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.open">
        <counts>
          <entry key="Clojure" value="27" />
          <entry key="JSON" value="6" />
          <entry key="PLAIN_TEXT" value="2" />
          <entry key="XML" value="1" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.edit">
        <counts>
          <entry key="clj" value="8803" />
          <entry key="json" value="316" />
          <entry key="md" value="25" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.edit">
        <counts>
          <entry key="Clojure" value="8803" />
          <entry key="JSON" value="316" />
          <entry key="Markdown" value="25" />
        </counts>
      </usages-collector>
    </session>
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/json_to_sql/update.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="204">
              <caret line="12" column="59" selection-start-line="12" selection-start-column="59" selection-end-line="12" selection-end-column="59" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/json_to_sql/insert.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state>
              <caret column="22" lean-forward="true" selection-start-column="22" selection-end-column="22" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/json_to_sql/core.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="442">
              <caret line="32" column="38" lean-forward="true" selection-start-line="32" selection-start-column="38" selection-end-line="32" selection-end-column="38" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/LICENSE">
          <provider selected="true" editor-type-id="text-editor" />
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/json_to_sql/sql_util.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="646">
              <caret line="50" column="6" lean-forward="true" selection-start-line="50" selection-start-column="6" selection-end-line="50" selection-end-column="21" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/json_to_sql/json_util.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="255">
              <caret line="15" column="41" lean-forward="true" selection-start-line="15" selection-start-column="41" selection-end-line="15" selection-end-column="41" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/resources/insert.json">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="119">
              <caret line="7" column="3" lean-forward="true" selection-start-line="7" selection-start-column="3" selection-end-line="7" selection-end-column="3" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/project.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="102">
              <caret line="6" column="36" selection-start-line="6" selection-start-column="36" selection-end-line="6" selection-end-column="36" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/resources/update.json">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="204">
              <caret line="12" column="12" selection-start-line="12" selection-start-column="7" selection-end-line="12" selection-end-column="12" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>print</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/doc/intro.md" />
        <option value="$PROJECT_DIR$/src/json_to_sql/query_templates.clj" />
        <option value="$PROJECT_DIR$/src/json_to_sql/templates.clj" />
        <option value="$PROJECT_DIR$/src/json_to_sql/converter.clj" />
        <option value="$PROJECT_DIR$/src/json_to_sql/builder.clj" />
        <option value="$PROJECT_DIR$/src/json_to_sql/template.clj" />
        <option value="$PROJECT_DIR$/src/json_to_sql/util.clj" />
        <option value="$PROJECT_DIR$/resources/insert.json" />
        <option value="$PROJECT_DIR$/project.clj" />
        <option value="$PROJECT_DIR$/resources/update.json" />
        <option value="$PROJECT_DIR$/src/json_to_sql/operation_util.clj" />
        <option value="$PROJECT_DIR$/src/json_to_sql/insert.clj" />
        <option value="$PROJECT_DIR$/src/json_to_sql/json_util.clj" />
        <option value="$PROJECT_DIR$/src/json_to_sql/update.clj" />
        <option value="$PROJECT_DIR$/src/json_to_sql/sql_util.clj" />
        <option value="$PROJECT_DIR$/src/json_to_sql/core.clj" />
      </list>
    </option>
  </component>
  <component name="MavenProjectNavigator">
    <treeState>
      <expand />
      <select />
    </treeState>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="225" />
    <option name="y" value="30" />
    <option name="width" value="2100" />
    <option name="height" value="1290" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="PackagesPane" />
      <pane id="Scope">
        <subPane subId="Scope 'Project Files'; set:Project Files; class com.intellij.psi.search.scope.ProjectFilesScope">
          <expand>
            <path>
              <item name="json-to-sql" type="3d21c010:ScopeViewTreeModel$ProjectNode" />
              <item name="json-to-sql" type="2674bda8:ScopeViewTreeModel$GroupNode" />
            </path>
            <path>
              <item name="json-to-sql" type="3d21c010:ScopeViewTreeModel$ProjectNode" />
              <item name="json-to-sql" type="2674bda8:ScopeViewTreeModel$GroupNode" />
              <item name="src" type="9f88c78c:ScopeViewTreeModel$FileNode" />
            </path>
            <path>
              <item name="json-to-sql" type="3d21c010:ScopeViewTreeModel$ProjectNode" />
              <item name="json-to-sql" type="2674bda8:ScopeViewTreeModel$GroupNode" />
              <item name="src" type="9f88c78c:ScopeViewTreeModel$FileNode" />
              <item name="json_to_sql" type="9f88c78c:ScopeViewTreeModel$FileNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="json-to-sql" type="b2602c69:ProjectViewProjectNode" />
              <item name="json-to-sql" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="json-to-sql" type="b2602c69:ProjectViewProjectNode" />
              <item name="json-to-sql" type="462c0819:PsiDirectoryNode" />
              <item name="resources" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="json-to-sql" type="b2602c69:ProjectViewProjectNode" />
              <item name="json-to-sql" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="json-to-sql" type="b2602c69:ProjectViewProjectNode" />
              <item name="json-to-sql" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="json_to_sql" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="com.android.tools.idea.instantapp.provision.ProvisionBeforeRunTaskProvider.myTimeStamp" value="1552226619652" />
    <property name="cursive.last.file.extension.D\:/Master/Clojure/json-to-sql/src" value="clj" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="project.structure.last.edited" value="Project" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.0" />
  </component>
  <component name="ReplState" timestamp="1552226619647">{:repl-history {:ide [], :local [{:command &quot;(s/join \&quot;,\&quot; (into [] (map name (keys map))))&quot;, :offset 44, :ns &quot;json-to-sql.core&quot;} {:command &quot;(clojure.string/join \&quot;, \&quot; (into [] (map name (keys map))))&quot;, :offset 58, :ns &quot;json-to-sql.core&quot;} {:command &quot;(clojure.string/join \&quot;, \&quot; (into [] (apply name (keys map))))&quot;, :offset 60, :ns &quot;json-to-sql.core&quot;} {:command &quot;(clojure.string/join \&quot;, \&quot; (into [] (apply name (keys {:a 1 :b 2}))))&quot;, :offset 68, :ns &quot;json-to-sql.core&quot;} {:command &quot;(map name (keys {:name \&quot;asddsa\&quot; :address \&quot;asdads\&quot;}))&quot;, :offset 52, :ns &quot;json-to-sql.core&quot;} {:command &quot;(into [] (map name (keys {:name \&quot;asddsa\&quot; :address \&quot;asdads\&quot;})))&quot;, :offset 62, :ns &quot;json-to-sql.core&quot;} {:command &quot;(clojure.string/join \&quot;, \&quot; (into [] (map name (keys {:name \&quot;asddsa\&quot; :address \&quot;asdads\&quot;}))))&quot;, :offset 89, :ns &quot;json-to-sql.core&quot;} {:command &quot;(clojure.string/replace \&quot;aaa {a} bbb\&quot; \&quot;{a}\&quot; (clojure.string/join \&quot;, \&quot; (into [] (map name (keys {:name \&quot;asddsa\&quot; :address \&quot;asdads\&quot;})))))&quot;, :offset 134, :ns &quot;json-to-sql.core&quot;} {:command &quot;(s/join \&quot;, \&quot; (into [] (map name (keys {:a 1 :b 2}))))&quot;, :offset 53, :ns &quot;json-to-sql.core&quot;} {:command &quot;(clojure.string/join \&quot;, \&quot; (into [] (map name (keys {:a 1 :b 2}))))&quot;, :offset 66, :ns &quot;json-to-sql.core&quot;} {:command &quot;(json-to-sql.util/get-column-names {:a 1 :b 2})&quot;, :offset 47, :ns &quot;json-to-sql.core&quot;} {:command &quot;(json-to-sql.util/get-column-names {:a 1, :b 2})&quot;, :offset 48, :ns &quot;json-to-sql.core&quot;} {:command &quot;(clojure.string/join \&quot;, \&quot; (seq (map name (keys {:a 1 :b 2}))))&quot;, :offset 62, :ns &quot;json-to-sql.core&quot;} {:command &quot;(defn get-column-names\n  \&quot;Gets string of column names joined with ,\&quot;\n  [map]\n  (s/join \&quot;, \&quot; (seq (map name (keys map)))))&quot;, :offset 121, :ns &quot;json-to-sql.core&quot;} {:command &quot;(defn get-column-names\n  \&quot;Gets string of column names joined with ,\&quot;\n  [map]\n  (clojure.string/join \&quot;, \&quot; (seq (map name (keys map)))))&quot;, :offset 134, :ns &quot;json-to-sql.core&quot;} {:command &quot;(get-column-names {:a 1, :b 2})&quot;, :offset 31, :ns &quot;json-to-sql.core&quot;} {:command &quot;(map {:a 1, :b 2})&quot;, :offset 18, :ns &quot;json-to-sql.core&quot;} {:command &quot;(map name {:a 1, :b 2})&quot;, :offset 23, :ns &quot;json-to-sql.core&quot;} {:command &quot;(map name (keys {:a 1, :b 2}))&quot;, :offset 30, :ns &quot;json-to-sql.core&quot;} {:command &quot;(seq (map name (keys {:a 1, :b 2})))&quot;, :offset 36, :ns &quot;json-to-sql.core&quot;} {:command &quot;(into [] (map name (keys {:a 1, :b 2})))&quot;, :offset 40, :ns &quot;json-to-sql.core&quot;} {:command &quot;(map #(s/replace % #\&quot;^:\&quot; \&quot;\&quot;) (keys {:a 1 :b 2}))&quot;, :offset 48, :ns &quot;json-to-sql.core&quot;} {:command &quot;(map #(clojure.string/replace % #\&quot;^:\&quot; \&quot;\&quot;) (keys {:a 1 :b 2}))&quot;, :offset 61, :ns &quot;json-to-sql.core&quot;} {:command &quot;(into [] (map #(clojure.string/replace % #\&quot;^:\&quot; \&quot;\&quot;) (keys {:a 1 :b 2})))&quot;, :offset 71, :ns &quot;json-to-sql.core&quot;} {:command &quot;(ns json-to-sql.core\n  (:require [json-to-sql.builder :as builder]))&quot;, :offset 68, :ns &quot;user&quot;} {:command &quot;(name :x)&quot;, :offset 9, :ns &quot;json-to-sql.core&quot;} {:command &quot;(map name (keys {:a \&quot;aaa\&quot; :b \&quot;aaa\&quot;}))&quot;, :offset 37, :ns &quot;json-to-sql.core&quot;} {:command &quot;(clojure.string/join \&quot;, \&quot; (map name (keys {:a \&quot;aaa\&quot; :b \&quot;aaa\&quot;})))&quot;, :offset 64, :ns &quot;json-to-sql.core&quot;} {:command &quot;(keys {:a 1 :b 1})&quot;, :offset 18, :ns &quot;json-to-sql.core&quot;} {:command &quot;(let [keys (keys {:aa 1 :bbsa \&quot;asd\&quot;})\n      mapped-keys (into [] (map name keys))]\n  (s/join \&quot;, \&quot; mapped-keys))&quot;, :offset 37, :ns &quot;json-to-sql.core&quot;} {:command &quot;(let [keys (keys {:aa 1 :bbsa \&quot;asd\&quot;})\n      mapped-keys (into [] (map name keys))]\n  (clojure.string/join \&quot;, \&quot; mapped-keys))&quot;, :offset 100, :ns &quot;json-to-sql.core&quot;} {:command &quot;(str \&quot;''\&quot; \&quot;a\&quot;)&quot;, :offset 14, :ns &quot;json-to-sql.core&quot;} {:command &quot;(string? \&quot;Pera\&quot;)&quot;, :offset 16, :ns &quot;json-to-sql.core&quot;} {:command &quot;(str \&quot;'\&quot; \&quot;aa\&quot; \&quot;'\&quot;)&quot;, :offset 18, :ns &quot;json-to-sql.core&quot;} {:command &quot;(for [val (vals {\&quot;name\&quot; \&quot;a\&quot; \&quot;address\&quot; \&quot;b\&quot; \&quot;link\&quot; 2})]\n  (if (string? (type val))\n    (str \&quot;'\&quot; val \&quot;'\&quot;)\n    val))&quot;, :offset 112, :ns &quot;json-to-sql.core&quot;} {:command &quot;(s/join \&quot;, \&quot; (for [val (vals {\&quot;name\&quot; \&quot;a\&quot; \&quot;address\&quot; \&quot;b\&quot; \&quot;link\&quot; 2})]\n               (if (string? (type val))\n                 (str \&quot;'\&quot; val \&quot;'\&quot;)\n                 val)))&quot;, :offset 165, :ns &quot;json-to-sql.core&quot;} {:command &quot;(clojure.string/join \&quot;, \&quot; (for [val (vals {\&quot;name\&quot; \&quot;a\&quot; \&quot;address\&quot; \&quot;b\&quot; \&quot;link\&quot; 2})]\n               (if (string? (type val))\n                 (str \&quot;'\&quot; val \&quot;'\&quot;)\n                 val)))&quot;, :offset 178, :ns &quot;json-to-sql.core&quot;} {:command &quot;(clojure.string/join \&quot;, \&quot; (for [val (vals {\&quot;name\&quot; \&quot;a\&quot; \&quot;address\&quot; \&quot;b\&quot; \&quot;link\&quot; 2})]\n               (if (string? (type val))\n                 (str \&quot;\\'\&quot; val \&quot;\\'\&quot;)\n                 val)))&quot;, :offset 180, :ns &quot;json-to-sql.core&quot;} {:command &quot;(clojure.string/join \&quot;, \&quot; (for [val (vals {\&quot;name\&quot; \&quot;a\&quot; \&quot;address\&quot; \&quot;b\&quot; \&quot;link\&quot; 2})]\n               (if (string? (type val))\n                 (str \&quot;''\&quot; val \&quot;''\&quot;)\n                 val)))&quot;, :offset 180, :ns &quot;json-to-sql.core&quot;} {:command &quot;(clojure.string/join \&quot;, \&quot; (for [val (vals {\&quot;name\&quot; \&quot;a\&quot; \&quot;address\&quot; \&quot;b\&quot; \&quot;link\&quot; 2})]\n               (if (string? (type val))\n                 (str \&quot;'\\\&quot; val \&quot;'\\\&quot;)\n                 val)))&quot;, :offset 180, :ns &quot;json-to-sql.core&quot;} {:command &quot;(clojure.string/join \&quot;, \&quot; (for [val (vals {\&quot;name\&quot; \&quot;a\&quot; \&quot;address\&quot; \&quot;b\&quot; \&quot;link\&quot; 2})]\n               (if (string? (type val))\n                 (str \&quot;\&quot; val \&quot;'\&quot;)\n                 val)))&quot;, :offset 177, :ns &quot;json-to-sql.core&quot;} {:command &quot;(clojure.string/join \&quot;, \&quot; (for [val (vals {\&quot;name\&quot; \&quot;a\&quot; \&quot;address\&quot; \&quot;b\&quot; \&quot;link\&quot; 2})]\n               (if (string? (type val))\n                 (clojure.string/join \&quot;''\&quot; val)\n                 val)))&quot;, :offset 191, :ns &quot;json-to-sql.core&quot;} {:command &quot;(clojure.string/join \&quot;, \&quot; (for [val (vals {\&quot;name\&quot; \&quot;a\&quot; \&quot;address\&quot; \&quot;b\&quot; \&quot;link\&quot; 2})]\n               (if (string? (type val))\n                 (str \&quot;\\''\&quot; val \&quot;\\''\&quot;)\n                 val)))&quot;, :offset 182, :ns &quot;json-to-sql.core&quot;} {:command &quot;(clojure.string/join \&quot;, \&quot; (for [val (vals {\&quot;name\&quot; \&quot;a\&quot; \&quot;address\&quot; \&quot;b\&quot; \&quot;link\&quot; 2})]\n               (if (string? (type val))\n                 (str \&quot;\\'\\\&quot; val \&quot;\\'\\\&quot;)\n                 val)))&quot;, :offset 182, :ns &quot;json-to-sql.core&quot;} {:command &quot;(clojure.string/join \&quot;, \&quot; (for [val (vals {\&quot;name\&quot; \&quot;a\&quot; \&quot;address\&quot; \&quot;b\&quot; \&quot;link\&quot; 2})]\n               (if (string? (type val))\n                 (str \&quot;`\&quot; val \&quot;`\&quot;)\n                 val)))&quot;, :offset 178, :ns &quot;json-to-sql.core&quot;} {:command &quot;(str \&quot;'a'\&quot; \&quot;b\&quot;)&quot;, :offset 15, :ns &quot;json-to-sql.core&quot;} {:command &quot;(keyword? :a)&quot;, :offset 13, :ns &quot;json-to-sql.core&quot;} {:command &quot;(str \&quot;'aa'\&quot; \&quot;b\&quot;)&quot;, :offset 16, :ns &quot;json-to-sql.core&quot;} {:command &quot;(clojure.string/join \&quot;, \&quot; (for [val (vals {\&quot;name\&quot; \&quot;a\&quot; \&quot;address\&quot; \&quot;b\&quot; \&quot;link\&quot; 2})]\n               (if (string? (type val))\n                 (str \&quot;\\\&quot;\&quot; val \&quot;\\\&quot;\&quot;)\n                 val)))&quot;, :offset 180, :ns &quot;json-to-sql.core&quot;} {:command &quot;(for [val (vals {\&quot;name\&quot; \&quot;a\&quot; \&quot;address\&quot; \&quot;b\&quot; \&quot;link\&quot; 2})]\n  (if (string? (type val))\n    ((println str \&quot;\\\&quot;\&quot; val \&quot;\\\&quot;\&quot;)\n      (str \&quot;\\\&quot;\&quot; val \&quot;\\\&quot;\&quot;))\n    val))&quot;, :offset 150, :ns &quot;json-to-sql.core&quot;} {:command &quot;(name :key)&quot;, :offset 11, :ns &quot;json-to-sql.core&quot;} {:command &quot;(for [key (keys {:aaa \&quot;asdsa\&quot; :bbb \&quot;asddsa\&quot;})]\n  (name key))&quot;, :offset 60, :ns &quot;json-to-sql.core&quot;} {:command &quot;(clojure.string/join \&quot;, \&quot; (seq (for [key (keys map)]\n                                 (name key))))&quot;, :offset 99, :ns &quot;json-to-sql.core&quot;} {:command &quot;(clojure.string/join \&quot;, \&quot; (into [] (for [key (keys map)]\n                                 (name key))))&quot;, :offset 103, :ns &quot;json-to-sql.core&quot;} {:command &quot;(clojure.string/join \&quot;, \&quot; (map seq (for [key (keys map)]\n                                 (name key))))&quot;, :offset 103, :ns &quot;json-to-sql.core&quot;} {:command &quot;(clojure.string/join \&quot;, \&quot; (for [key (keys map)]\n                            (name key)))&quot;, :offset 88, :ns &quot;json-to-sql.core&quot;} {:command &quot;(map inc {:a 1 :b 2})&quot;, :offset 21, :ns &quot;json-to-sql.core&quot;} {:command &quot;(map inc (seq {:a 1 :b 2}))&quot;, :offset 27, :ns &quot;json-to-sql.core&quot;} {:command &quot;(map inc (into [] {:a 1 :b 2}))&quot;, :offset 17, :ns &quot;user&quot;} {:command &quot;(map #(+ % 1) (into [] {:a 1 :b 2}))&quot;, :offset 36, :ns &quot;user&quot;} {:command &quot;(ns json-to-sql.core)&quot;, :offset 21, :ns &quot;user&quot;} {:command &quot;(map inc [1 2 3])&quot;, :offset 17, :ns &quot;json-to-sql.core&quot;} {:command &quot;(ns json-to-sql.util\n  (:require [clojure.string :as s]))&quot;, :offset 57, :ns &quot;json-to-sql.core&quot;} {:command &quot;(if (string? \&quot;a\&quot;)\n  (value-&gt;string value)\n  value)&quot;, :offset 50, :ns &quot;json-to-sql.util&quot;} {:command &quot;(if (string? \&quot;a\&quot;)\n  (value-&gt;string \&quot;a\&quot;)\n  \&quot;a\&quot;)&quot;, :offset 46, :ns &quot;json-to-sql.util&quot;} {:command &quot;(doc map)&quot;, :offset 9, :ns &quot;json-to-sql.insert&quot;} {:command &quot;(map #(+ % 1) [1 2 3])&quot;, :offset 22, :ns &quot;json-to-sql.insert&quot;} {:command &quot;(map #(str \&quot;'\&quot; % \&quot;'\&quot;) [\&quot;a\&quot; \&quot;b\&quot; \&quot;c\&quot;])&quot;, :offset 36, :ns &quot;json-to-sql.insert&quot;} {:command &quot;(into [] (vals {:name \&quot;Pera\&quot; :address \&quot;Fake Street 213\&quot; :link 2}) )&quot;, :offset 67, :ns &quot;json-to-sql.insert&quot;} {:command &quot;(get-column-names {:name \&quot;Pera\&quot; :address \&quot;Fake Street 213\&quot; :link 2})&quot;, :offset 68, :ns &quot;json-to-sql.insert&quot;} {:command &quot;(get-column-values {:name \&quot;Pera\&quot; :address \&quot;Fake Street 213\&quot; :link 2})&quot;, :offset 69, :ns &quot;json-to-sql.insert&quot;} {:command &quot;(ns json-to-sql.core\n  (:require [json-to-sql.insert :as insert]\n            [cheshire.core]))&quot;, :offset 94, :ns &quot;json-to-sql.insert&quot;} {:command &quot;(type \&quot;a\&quot;)&quot;, :offset 10, :ns &quot;json-to-sql.core&quot;} {:command &quot;(type true)&quot;, :offset 11, :ns &quot;json-to-sql.core&quot;} {:command &quot;(type 1)&quot;, :offset 8, :ns &quot;json-to-sql.core&quot;} {:command &quot;(boolean a)&quot;, :offset 11, :ns &quot;json-to-sql.core&quot;} {:command &quot;(boolean true)&quot;, :offset 14, :ns &quot;json-to-sql.core&quot;} {:command &quot;(require 'clojure.core)&quot;, :offset 10, :ns &quot;json-to-sql.core&quot;} {:command &quot;(boolean? true)&quot;, :offset 15, :ns &quot;json-to-sql.core&quot;} {:command &quot;(instance? Boolean true)&quot;, :offset 24, :ns &quot;json-to-sql.core&quot;} {:command &quot;(instance? Boolean \&quot;aa\&quot;)&quot;, :offset 24, :ns &quot;json-to-sql.core&quot;} {:command &quot;(json-&gt;insert)&quot;, :offset 14, :ns &quot;json-to-sql.core&quot;} {:command &quot;(ns json-to-sql.insert\n  (:require [json-to-sql.util :as util]\n            [clojure.string :as s]))&quot;, :offset 99, :ns &quot;user&quot;} {:command &quot;(slurp test-json-file)&quot;, :offset 22, :ns &quot;json-to-sql.insert&quot;} {:command &quot;(ns json-to-sql.core\n  (:require [json-to-sql.insert :as insert]\n            [json-to-sql.update :as update]\n            [cheshire.core :as cheshire]))&quot;, :offset 151, :ns &quot;json-to-sql.insert&quot;} {:command &quot;(read_json)&quot;, :offset 11, :ns &quot;json-to-sql.core&quot;} {:command &quot;(ns)&quot;, :offset 4, :ns &quot;json-to-sql.core&quot;} {:command &quot;test-json-file&quot;, :offset 14, :ns &quot;json-to-sql.core&quot;} {:command &quot;(cheshire/parse-string (slurp test-json-file) true)&quot;, :offset 51, :ns &quot;json-to-sql.core&quot;} {:command &quot;(read_json test-json-file)&quot;, :offset 26, :ns &quot;json-to-sql.core&quot;} {:command &quot;(read-json test-json-file)&quot;, :offset 6, :ns &quot;json-to-sql.core&quot;} {:command &quot;(read-json update-json-file)&quot;, :offset 27, :ns &quot;json-to-sql.core&quot;} {:command &quot;(first [:a :b :c])&quot;, :offset 18, :ns &quot;json-to-sql.core&quot;} {:command &quot;(= :ket :ket)&quot;, :offset 13, :ns &quot;json-to-sql.core&quot;} {:command &quot;(= :ket :key)&quot;, :offset 13, :ns &quot;json-to-sql.core&quot;} {:command &quot;(first (filter #(not= % :conditions) (keys {:Users {:name \&quot;Joe Doe\&quot;, :address \&quot;Fake street 123\&quot;, :date_of_birth \&quot;01.01.1900\&quot;, :is_admin true, :card_no 123},\n                                            :condition {:id {:operation \&quot;eq\&quot;, :value 1}}})))&quot;, :offset 246, :ns &quot;json-to-sql.core&quot;} {:command &quot;(name (first (filter #(not= % :conditions) (keys {:Users {:name \&quot;Joe Doe\&quot;, :address \&quot;Fake street 123\&quot;, :date_of_birth \&quot;01.01.1900\&quot;, :is_admin true, :card_no 123},\n                                                  :condition {:id {:operation \&quot;eq\&quot;, :value 1}}}))))&quot;, :offset 258, :ns &quot;json-to-sql.core&quot;} {:command &quot;(name (first (filter #(or (not= % :conditions) (not= % :pera)) (keys {:pera \&quot;aaa\&quot; :Users {:name \&quot;Joe Doe\&quot;, :address \&quot;Fake street 123\&quot;, :date_of_birth \&quot;01.01.1900\&quot;, :is_admin true, :card_no 123},\n                                                  :condition {:id {:operation \&quot;eq\&quot;, :value 1}}}))))&quot;, :offset 60, :ns &quot;json-to-sql.core&quot;} {:command &quot;(name (first (filter #(and (not= % :conditions) (not= % :pera)) (keys {:pera \&quot;aaa\&quot; :Users {:name \&quot;Joe Doe\&quot;, :address \&quot;Fake street 123\&quot;, :date_of_birth \&quot;01.01.1900\&quot;, :is_admin true, :card_no 123},\n                                                  :condition {:id {:operation \&quot;eq\&quot;, :value 1}}}))))&quot;, :offset 210, :ns &quot;json-to-sql.core&quot;} {:command &quot;(json-&gt;insert insert-json-file)&quot;, :offset 31, :ns &quot;json-to-sql.core&quot;}], :remote []}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager">
    <configuration name="REPL for json-to-sql" type="ClojureREPL" factoryName="Local" temporary="true">
      <module name="json-to-sql" />
      <setting name="replType" value="1" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="JetRunConfigurationType" factoryName="Kotlin">
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="MAIN_CLASS_NAME" />
      <option name="WORKING_DIRECTORY" />
      <module name="" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType" factoryName="Kotlin script">
      <option name="filePath" />
      <option name="vmParameters" />
      <option name="alternativeJrePath" />
      <option name="programParameters" />
      <option name="passParentEnvs" value="true" />
      <option name="workingDirectory" />
      <option name="isAlternativeJrePathEnabled" value="false" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="MAIN_CLASS_NAME" />
      <option name="WORKING_DIRECTORY" />
      <module name="" />
      <option name="filePath" />
      <option name="vmParameters" />
      <option name="alternativeJrePath" />
      <option name="programParameters" />
      <option name="passParentEnvs" value="true" />
      <option name="workingDirectory" />
      <option name="isAlternativeJrePathEnabled" value="false" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="MAIN_CLASS_NAME" />
      <option name="WORKING_DIRECTORY" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Clojure REPL.REPL for json-to-sql" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="59e8d504-b30e-4206-b9e9-d4ea7d1a29bd" name="Default Changelist" comment="" />
      <created>1547328978037</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1547328978037</updated>
    </task>
    <servers />
  </component>
  <component name="ToolWindowManager">
    <frame x="-7" y="-7" width="1721" height="935" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.12402167" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Image Layers" order="2" />
      <window_info id="Designer" order="3" />
      <window_info id="UI Designer" order="4" />
      <window_info id="Capture Tool" order="5" />
      <window_info id="Favorites" order="6" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" />
      <window_info anchor="bottom" id="Run" order="2" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Terminal" order="7" weight="0.32917705" />
      <window_info anchor="bottom" id="Event Log" order="8" side_tool="true" />
      <window_info anchor="bottom" id="Version Control" order="9" show_stripe_button="false" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Palette" order="3" />
      <window_info anchor="right" id="Capture Analysis" order="4" />
      <window_info anchor="right" id="Theme Preview" order="5" />
      <window_info active="true" anchor="right" id="REPL" order="6" side_tool="true" visible="true" weight="0.3732691" />
      <window_info anchor="right" id="Palette&#9;" order="7" />
      <window_info anchor="right" id="Maven Projects" order="8" weight="0.32992172" />
    </layout>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/doc/intro.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor relative-caret-position="34">
            <caret line="2" column="77" selection-start-line="2" selection-start-column="77" selection-end-line="2" selection-end-column="77" />
          </first_editor>
          <second_editor />
        </state>
      </provider>
      <provider editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/test/json_to_sql/core_test.clj">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/src/json_to_sql/converter.clj" />
    <entry file="file://$PROJECT_DIR$/src/json_to_sql/template.clj" />
    <entry file="file://$PROJECT_DIR$/.idea/workspace.xml">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-7488" />
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/json_to_sql/operation_util.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="34">
          <caret line="2" selection-start-line="2" selection-end-line="2" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/resources/insert.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="119">
          <caret line="7" column="3" lean-forward="true" selection-start-line="7" selection-start-column="3" selection-end-line="7" selection-end-column="3" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/resources/update.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="204">
          <caret line="12" column="12" selection-start-line="12" selection-start-column="7" selection-end-line="12" selection-end-column="12" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/json_to_sql/json_util.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="255">
          <caret line="15" column="41" lean-forward="true" selection-start-line="15" selection-start-column="41" selection-end-line="15" selection-end-column="41" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/json_to_sql/insert.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret column="22" lean-forward="true" selection-start-column="22" selection-end-column="22" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/json_to_sql/update.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="204">
          <caret line="12" column="59" selection-start-line="12" selection-start-column="59" selection-end-line="12" selection-end-column="59" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/json_to_sql/sql_util.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="646">
          <caret line="50" column="6" lean-forward="true" selection-start-line="50" selection-start-column="6" selection-end-line="50" selection-end-column="21" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/LICENSE">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="102">
          <caret line="6" column="36" selection-start-line="6" selection-start-column="36" selection-end-line="6" selection-end-column="36" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/json_to_sql/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="442">
          <caret line="32" column="38" lean-forward="true" selection-start-line="32" selection-start-column="38" selection-end-line="32" selection-end-column="38" />
        </state>
      </provider>
    </entry>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ArtifactsStructureConfigurable.UI">
        <settings>
          <artifact-editor />
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="FacetStructureConfigurable.UI">
        <settings>
          <last-edited>No facets are configured</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="GlobalLibrariesConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="JdkListConfigurable.UI">
        <settings>
          <last-edited>IDE SDK</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ModuleStructureConfigurable.UI">
        <settings>
          <last-edited>json-to-sql</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
                <option value="0.6" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectJDKs.UI">
        <settings>
          <last-edited>IDE SDK</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectLibrariesConfigurable.UI">
        <settings>
          <last-edited>Leiningen: clojure-complete:0.2.4</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>